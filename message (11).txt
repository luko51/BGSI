local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

-- Player setup
local player = Players.LocalPlayer
if not player then warn("[BGSI Pet Spawner] Player not found!") return end
local playerGui = player:WaitForChild("PlayerGui", 5)
if not playerGui then warn("[BGSI Pet Spawner] PlayerGui not found!") return end

-- Load HatchEgg module
local eggModule
local success, result = pcall(function()
    local hatchEgg = ReplicatedStorage:WaitForChild("Client", 5):WaitForChild("Effects", 5):WaitForChild("HatchEgg", 5)
    return require(hatchEgg)
end)
if success then
    eggModule = result
else
    warn("[BGSI Pet Spawner] Failed to load HatchEgg: " .. tostring(result))
    eggModule = { Play = function() warn("[BGSI Pet Spawner] HatchEgg missing.") end }
end

-- Egg Configurations
local eggs = {
    ["Void Egg"] = {
        Speed = 1.5,
        Name = "Void Egg",
        Pets = {
            { Deleted = false, Pet = { Mythic = true, Shiny = true, Name = "NULLVoid", Type = "Pet" }, New = false }
        }
    },
    ["Common Egg"] = {
        Speed = 1.5,
        Name = "Common Egg",
        Pets = {
            { Deleted = false, Pet = { Mythic = true, Shiny = true, Name = "King Doggy", Type = "Pet" }, New = false }
        }
    },
    ["Aura Egg"] = {
        Speed = 1.5,
        Name = "Aura Egg",
        Pets = {
            { Deleted = false, Pet = { Mythic = true, Shiny = true, Name = "MAN FACE GOD", Type = "Pet" }, New = false }
        }
    },
    ["Nightmare Egg"] = {
        Speed = 1.5,
        Name = "Nightmare Egg",
        Pets = {
            { Deleted = false, Pet = { Mythic = true, Shiny = true, Name = "The Overlord", Type = "Pet" }, New = false }
        }
    },
    ["100M Egg"] = {
        Speed = 1.5,
        Name = "100M Egg",
        Pets = {
            { Deleted = false, Pet = { Mythic = true, Shiny = true, Name = "Royal Trophy", Type = "Pet" }, New = false }
        }
    }
}

local loadingTime = 5
local messages = {
    "LOADING CONFIGS...",
    "BYPASSING DATABASE...",
    "LOADING SCRIPT...",
    "BYPASSED ANTI CHEAT : DONE...",
    "FULLY LOADED...",
    "done!"
}

local loadingGui = Instance.new("ScreenGui", playerGui)
loadingGui.Name = "BGSI_LoadingScreen"
loadingGui.ResetOnSpawn = false
loadingGui.IgnoreGuiInset = true
loadingGui.DisplayOrder = 100

local frame = Instance.new("Frame", loadingGui)
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)

local bgImage = Instance.new("ImageLabel", frame)
bgImage.Size = UDim2.new(1, 0, 1, 0)
bgImage.Image = "rbxassetid://2151741365"
bgImage.ImageTransparency = 0.5
bgImage.BackgroundTransparency = 1
bgImage.ScaleType = Enum.ScaleType.Stretch

local progressFrame = Instance.new("Frame", frame)
progressFrame.Size = UDim2.new(0.6, 0, 0, 40)
progressFrame.Position = UDim2.new(0.2, 0, 0.5, -20)
progressFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Instance.new("UICorner", progressFrame).CornerRadius = UDim.new(0, 8)

local progressFill = Instance.new("Frame", progressFrame)
progressFill.Size = UDim2.new(0, 0, 1, 0)
progressFill.BackgroundColor3 = Color3.fromRGB(24, 24, 24) -- Green Progress Bar
Instance.new("UICorner", progressFill).CornerRadius = UDim.new(0, 8)

local progressText = Instance.new("TextLabel", progressFrame)
progressText.Size = UDim2.new(1, 0, 0, 20)
progressText.Position = UDim2.new(0, 0, -1, -10)
progressText.Text = "0%"
progressText.TextColor3 = Color3.fromRGB(255, 255, 255)
progressText.BackgroundTransparency = 1
progressText.Font = Enum.Font.GothamBold
progressText.TextSize = 18

local loadingLabel = Instance.new("TextLabel", frame)
loadingLabel.Size = UDim2.new(0.8, 0, 0, 50)
loadingLabel.Position = UDim2.new(0.1, 0, 0.5, 30)
loadingLabel.Text = messages[1]
loadingLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
loadingLabel.BackgroundTransparency = 1
loadingLabel.Font = Enum.Font.GothamBold
loadingLabel.TextSize = 28

-- Progress animation
local startTime = tick()
RunService:BindToRenderStep("LoadingUpdate", Enum.RenderPriority.Camera.Value + 1, function()
    local elapsed = tick() - startTime
    local progress = math.clamp(elapsed / loadingTime, 0, 1)
    progressFill.Size = UDim2.new(progress, 0, 1, 0)
    progressText.Text = math.floor(progress * 100) .. "%"

    local msgIndex = math.min(#messages, math.floor(elapsed) + 1)
    loadingLabel.Text = messages[msgIndex]

    if elapsed >= loadingTime then
        RunService:UnbindFromRenderStep("LoadingUpdate")
        loadingGui:Destroy()
        showMainGui()
    end
end)

-- Main GUI
function showMainGui()
    local gui = Instance.new("ScreenGui", playerGui)
    gui.Name = "BGSI_PetSpawner"
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    gui.DisplayOrder = 100

    local main = Instance.new("Frame", gui)
    main.Size = UDim2.new(0, 350, 0, 450)
    main.Position = UDim2.new(0.5, -175, 0.5, -225)
    -- Gradient Dark Green Theme fading to Gray
    local gradient = Instance.new("UIGradient", main)
    gradient.Color = ColorSequence.new(Color3.fromRGB(40, 40, 40), Color3.fromRGB(60, 60, 60))
    gradient.Rotation = 45
    Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)

    local title = Instance.new("TextLabel", main)
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Text = "BGSI | SECRET HATCHER"
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20

    local credit = Instance.new("TextLabel", main)
    credit.Size = UDim2.new(1, 0, 0, 20)
    credit.Position = UDim2.new(0, 0, 1, -30)
    credit.Text = "@devsaii"
    credit.BackgroundTransparency = 1
    credit.TextColor3 = Color3.fromRGB(200, 200, 200)
    credit.Font = Enum.Font.Gotham
    credit.TextSize = 14
    credit.TextXAlignment = Enum.TextXAlignment.Center

    local close = Instance.new("TextButton", main)
    close.Size = UDim2.new(0, 30, 0, 30)
    close.Position = UDim2.new(1, -35, 0, 5)
    close.Text = "X"
    close.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    close.TextColor3 = Color3.new(1, 1, 1)
    close.Font = Enum.Font.GothamBold
    close.TextSize = 16
    Instance.new("UICorner", close).CornerRadius = UDim.new(0, 6)
    close.MouseButton1Click:Connect(function() gui:Destroy() end)

    -- Dragging logic
    local dragging = false
    local dragInput, startPos, dragStart
    main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    main.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Tier selection
    local selectedTier = "MythicShiny"
    local tierMap = {
        ["Mythic Shiny"] = { Mythic = true, Shiny = true },
        ["Mythic"] = { Mythic = true, Shiny = false },
        ["Shiny"] = { Mythic = false, Shiny = true },
        ["Normal"] = { Mythic = false, Shiny = false },
    }

    local tierLabel = Instance.new("TextLabel", main)
    tierLabel.Size = UDim2.new(1, -20, 0, 20)
    tierLabel.Position = UDim2.new(0, 10, 0, 50)
    tierLabel.BackgroundTransparency = 1
    tierLabel.Text = "Select Pet Tier:"
    tierLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    tierLabel.Font = Enum.Font.Gotham
    tierLabel.TextSize = 14

    local tierY = 75
    for tierName, flags in pairs(tierMap) do
        local btn = Instance.new("TextButton", main)
        btn.Size = UDim2.new(0.9, 0, 0, 25)
        btn.Position = UDim2.new(0.05, 0, 0, tierY)
        btn.Text = tierName
        btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80) -- Default gray button
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 14
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

        -- Hover effect
        btn.MouseEnter:Connect(function()
            btn.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red on hover
        end)
        btn.MouseLeave:Connect(function()
            if selectedTier ~= tierName then
                btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80) -- Reverts to gray
            else
                btn.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Keep selected color
            end
        end)

        -- Click effect
        btn.MouseButton1Click:Connect(function()
            selectedTier = tierName
            -- Update all buttons to their default color
            for _, otherBtn in pairs(main:GetChildren()) do
                if otherBtn:IsA("TextButton") then
                    otherBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80) -- Gray for unselected
                end
            end
            -- Highlight the clicked button
            btn.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green for selected tier
        end)

        tierY = tierY + 30
    end

    -- Egg buttons
    local y = tierY + 10
    for name, data in pairs(eggs) do
        local btn = Instance.new("TextButton", main)
        btn.Size = UDim2.new(0.9, 0, 0, 40)
        btn.Position = UDim2.new(0.05, 0, 0, y)
        btn.Text = name
        btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80) -- Default gray egg button color
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 16
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

        btn.MouseButton1Click:Connect(function()
            for _, petData in ipairs(data.Pets) do
                petData.Pet.Mythic = tierMap[selectedTier].Mythic
                petData.Pet.Shiny = tierMap[selectedTier].Shiny
            end
            eggModule:Play(data)
            for _, petData in pairs(data.Pets) do
                announcePet(petData.Pet)
            end
        end)

        y = y + 50
    end
end